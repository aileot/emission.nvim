SHELL := bash
.ONESHELL:
.DELETE_ON_ERROR:

MAKEFLAGS += --no-builtin-rules
MAKEFLAGS += --warn-undefined-variables

FENNEL ?= fennel
VUSTED ?= vusted

# Note: The --correlate flag is likely to cause conflicts.
FNL_FLAGS ?=
FNL_EXTRA_FLAGS ?=

VUSTED_EXTRA_FLAGS ?=
VUSTED_FLAGS ?= --shuffle --output=utfTerminal $(VUSTED_EXTRA_FLAGS)

REPO_ROOT:=$(dir $(abspath $(lastword $(MAKEFILE_LIST))))
TEST_ROOT:=$(REPO_ROOT)/test

FNL_SPECS:=$(wildcard $(TEST_ROOT)/*_spec.fnl)
LUA_SPECS:=$(FNL_SPECS:%.fnl=%.lua)

FNL_SRC:=$(wildcard fnl/*.fnl)
FNL_SRC+=$(wildcard fnl/*/*.fnl)
FNL_SRC+=$(wildcard fnl/*/*/*.fnl)
FNL_SRC:=$(filter-out %/macros.fnl,$(FNL_SRC))

LUA_IN_FNL:=$(wildcard fnl/*/*.lua)
LUA_IN_FNL+=$(wildcard fnl/*/*/*.lua)
LUA_COPIED:=$(LUA_IN_FNL:fnl/%.lua=lua/%.lua)

LUA_RES:=$(FNL_SRC:fnl/%.fnl=lua/%.lua)
LUA_RES+=$(LUA_COPIED)

FNL_SRC_DIRS:=$(wildcard fnl/*/*/)

REPO_FNL_DIR := $(REPO_ROOT)/fnl
REPO_FNL_PATH := $(REPO_FNL_DIR)/?.fnl;$(REPO_FNL_DIR)/?/init.fnl
REPO_MACRO_DIR := $(REPO_FNL_DIR)
REPO_MACRO_PATH := $(REPO_MACRO_DIR)/?.fnl;$(REPO_MACRO_DIR)/?/init.fnl

.DEFAULT_GOAL := help
.PHONY: help
help: ## Show this help
	@echo Targets:
	@egrep -h '^\S+: .*## \S+' $(MAKEFILE_LIST) | sed 's/: .*##/:/' | column -t -s ':' | sed 's/^/  /'

lua/%.lua: fnl/%.fnl
	@mkdir -p $(dir $@)
	@$(FENNEL) \
		$(FNL_FLAGS) \
		$(FNL_EXTRA_FLAGS) \
		--add-macro-path "$(REPO_MACRO_PATH);$(TEST_ROOT)/?.fnl" \
		--compile $< > $@
	@echo $< "	->	" $@

lua/%.lua: fnl/%.lua
	@cp $< $@
	@sed -i '1c\-- WARNING: Do NOT edit this file. It was generated by make.' $@
	@echo $< "	->	" $@

.PHONY: clean
clean: ## Remove generated files
	@rm -rf lua/
	@rm -f $(LUA_SPECS)

.PHONY: build
build: $(LUA_RES) ## Deploy product files into lua/

%_spec.lua: %_spec.fnl
	@$(FENNEL) \
		$(FNL_FLAGS) \
		$(FNL_EXTRA_FLAGS) \
		--correlate \
		--add-macro-path "$(REPO_MACRO_PATH);$(TEST_ROOT)/?.fnl" \
		--compile $< > $@

.PHONY: test
test: build $(LUA_SPECS) ## Run test
	@$(VUSTED) \
		$(VUSTED_FLAGS) \
		$(TEST_ROOT)
